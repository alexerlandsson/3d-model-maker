// Custom Properties
// TOOD: Move to Rect component

@property --w {
  syntax: '<number>';
  inherits: false;
  initial-value: 1;
}

@property --h {
  syntax: '<number>';
  inherits: false;
  initial-value: 1;
}

@property --d {
  syntax: '<number>';
  inherits: false;
  initial-value: 1;
}

@property --x {
  syntax: '<number>';
  inherits: false;
  initial-value: 0;
}

@property --y {
  syntax: '<number>';
  inherits: false;
  initial-value: 0;
}

@property --z {
  syntax: '<number>';
  inherits: false;
  initial-value: 0;
}

@property --c {
  syntax: '<color>';
  inherits: false;
  initial-value: rgba(0, 255, 0, 0.5);
}

:root {
  --color-bg: #121212;
  --color-bg-hover: #1a1a1a;
  --color-text: #fff;
  --color-border: #424242;
  --color-border-canvas: #0000ff;
  --color-input-border: #fff;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
body {
  height: 100dvh;
}

body {
  margin: 0;
  background-color: var(--color-bg);
  font-family: sans-serif;
}

// TODO: Add as own component
.icon {
  display: block;
  width: 1em;
  height: 1em;
  fill: currentColor;
}



/* OLD CSS */

.editor__controls {
  position: absolute;
  top: 16px;
  right: 16px;
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.editor__controls-group{
  display: flex;
  flex-direction: column;
  border: 1px solid var(--color-border);
}

.editor__controls-group button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 44px;
  height: 44px;
  background-color: var(--color-bg);
  color: #fff;
  border: none;
  border-radius: none;
  cursor: pointer;
  font-size: 18px;
}

.editor__controls button + button {
  border-top: 1px solid var(--color-border);
}

.editor__controls button:enabled:hover {
  background-color: var(--color-bg-hover);
}

.editor__controls button[disabled] {
  cursor: not-allowed;
}

.editor__controls button[disabled] .icon {
  opacity: 0.37;
}

/* Rect */

.rect {
  --_w: calc(var(--w, 1) * var(--base-unit)); /* Width */
  --_h: calc(var(--h, 1) * var(--base-unit)); /* Height */
  --_d: calc(var(--d, 1) * var(--base-unit)); /* Depth */
  --_x: calc(var(--x, 0) * var(--base-unit)); /* Pos X */
  --_y: calc(var(--y, 0) * var(--base-unit)); /* Pos Y */
  --_z: calc(var(--z, 0) * var(--base-unit)); /* Pos Z */
  --_c: var(--c); /* Color */

  position: absolute;
  transform-style: preserve-3d;
  width: var(--_w);
  height: var(--_h);
  transform: translate3d(var(--_x), var(--_y), calc(var(--_canvas-depth) * 0.5 - var(--_d) * 0.5 - var(--_z)));
}

.rect__face {
  position: absolute;
  background-color: var(--_c);
}

.rect__face--front,
.rect__face--back {
  width: var(--_w);
  height: var(--_h);
}

.rect__face--left,
.rect__face--right {
  width: var(--_d);
  height: var(--_h);
  left: calc(var(--_w) * 0.5 - var(--_d) * 0.5);
}

.rect__face--top,
.rect__face--bottom {
  width: var(--_w);
  height: var(--_d);
  top: calc(var(--_h) * 0.5 - var(--_d) * 0.5);
}

.rect__face--front {
  transform: rotateY(0deg) translateZ(calc(var(--_d) * 0.5));
}

.rect__face--back {
  transform: rotateY(180deg) translateZ(calc(var(--_d) * 0.5));
}

.rect__face--left {
  transform: rotateY(-90deg) translateZ(calc(var(--_w) * 0.5));
}

.rect__face--right {
  transform: rotateY(90deg) translateZ(calc(var(--_w) * 0.5));
}

.rect__face--top {
  transform: rotateX(90deg) translateZ(calc(var(--_h) * 0.5));
}

.rect__face--bottom {
  transform: rotateX(-90deg) translateZ(calc(var(--_h) * 0.5));
}

/* Rect Hover Effects */

.canvas:has(.rect:hover) .rect:not(:hover) .rect__face {
  opacity: 0.5;
}

.rect:hover .rect__face {
  border: 2px solid red;
  background-color: color-mix(in srgb, var(--_c) 80%, transparent);
}

/* Rotation Reset */

.rotation-reset {
  grid-area: empty;
  background-color: var(--color-bg);
  border-top: 1px solid var(--color-border);
  border-left: 1px solid var(--color-border);
  z-index: 1;
}

.rotation-reset__button {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  padding: 0;
  margin: 0;
  background-color: transparent;
  color: #fff;
  border: none;
  border-radius: none;
  font-size: 1.125rem;
  cursor: pointer;
}

.rotation-reset__button:enabled:hover {
  background-color: var(--color-bg-hover);
}

.rotation-reset__button[disabled] {
  opacity: 0.37;
  cursor: not-allowed;
}

/* Crossy Road Chicken 3D Model */

.rect--body {
  --w: 6;
  --h: 13;
  --d: 7;
  --x: 2;
  --y: 2;
  --z: 3;
  --c: #fff;
}

.rect--back {
  --w: 6;
  --h: 5;
  --d: 3;
  --x: 2;
  --y: 10;
  --z: 10;
  --c: #fff;
}

.rect--tail {
  --w: 4;
  --h: 3;
  --d: 1;
  --x: 3;
  --y: 10;
  --z: 13;
  --c: #fff;
}

.rect--wing {
  --w: 2;
  --h: 3;
  --d: 6;
  --y: 11;
  --z: 5;
  --c: #fff;
}

.rect--wing-left {
  --x: 8;
}

.rect--wing-right {
  --x: 0;
}

.rect--leg {
  --w: 1;
  --h: 3;
  --d: 1;
  --y: 15;
  --z: 7;
  --c: #d8724f;
}

.rect--leg-left {
  --x: 7;
}

.rect--leg-right {
  --x: 2;
}

.rect--foot {
  --w: 3;
  --h: 1;
  --d: 3;
  --y: 18;
  --z: 6;
  --c: #d8724f;
}

.rect--foot-left {
  --x: 6;
}

.rect--foot-right {
  --x: 1;
}

.rect--toe {
  --w: 1;
  --h: 1;
  --d: 2;
  --y: 18;
  --z: 4;
  --c: #d8724f;
}

.rect--toe-left-left {
  --x: 8;
}

.rect--toe-left-right {
  --x: 6;
}

.rect--toe-right-left {
  --x: 3;
}

.rect--toe-right-right {
  --x: 1;
}

.rect--comb {
  --w: 2;
  --h: 2;
  --d: 4;
  --x: 4;
  --y: 0;
  --z: 4;
  --c: #cc625e;
}

.rect--beak {
  --w: 2;
  --h: 2;
  --d: 3;
  --x: 4;
  --y: 4;
  --z: 0;
  --c: #d8724f;
}

.rect--wattle {
  --w: 2;
  --h: 2;
  --d: 2;
  --x: 4;
  --y: 6;
  --z: 1;
  --c: #cc625e;
}

/* Crossy Road Chicken Colors */

/*
.rect--body .rect__face,
.rect--back .rect__face,
.rect--tail .rect__face,
.rect--wing .rect__face {
  background-color: #fff;
}
*/

.rect--body .rect__face--left::before,
.rect--body .rect__face--right::before {
  content: "";
  position: absolute;
  top: calc(var(--base-unit) * 2);
  width: var(--base-unit);
  height: var(--base-unit);
  background-color: #000;
}

.rect--body .rect__face--left::before {
  right: calc(var(--base-unit) * 2);
}

.rect--body .rect__face--right::before {
  left: calc(var(--base-unit) * 2);
}

/*
.rect--beak .rect__face,
.rect--leg .rect__face,
.rect--foot .rect__face,
.rect--toe .rect__face {
  background-color: #d8724f;
}

.rect--wattle .rect__face,
.rect--comb .rect__face {
  background-color: #cc625e;
}
*/









/* Base styles for both orientations */
input[type="range"] {
  --_range-thickness: 2px;
  --_thumb-size: 20px;

  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  margin: 0;
  padding-block: calc(var(--_thumb-size) * 0.5 - var(--_range-thickness) * 0.5 + 12px);
  padding-inline: 16px;
  cursor: grab;
}

input[type="range"]:active {
  cursor: grabbing;
}

/* ============================= */
/* Horizontal Slider Styles      */
/* ============================= */

/* WebKit */
input[type="range"]::-webkit-slider-runnable-track {
  background: #fff;
  height: var(--_range-thickness);
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  background: var(--color-bg);
  border: var(--_range-thickness) solid #fff;
  width: var(--_thumb-size);
  height: var(--_thumb-size);
  margin-top: calc(var(--_thumb-size) * -0.5 + var(--_range-thickness) * 0.5);
  border-radius: 50%;
}

/* Firefox */
input[type="range"]::-moz-range-track {
  background: #fff;
  height: var(--_range-thickness);
}

input[type="range"]::-moz-range-thumb {
  background: var(--color-bg);
  border: var(--_range-thickness) solid #fff;
  width: var(--_thumb-size);
  height: var(--_thumb-size);
  border-radius: 50%;
}

/* IE/Edge */

input[type="range"]::-ms-track {
  background: transparent;
  border-color: transparent;
  color: transparent;
  height: var(--_range-thickness);
}

input[type="range"]::-ms-fill-lower,
input[type="range"]::-ms-fill-upper {
  background: #fff;
}

input[type="range"]::-ms-thumb {
  background: var(--color-bg);
  border: var(--_range-thickness) solid #fff;
  width: var(--_thumb-size);
  height: var(--_thumb-size);
  border-radius: 50%;
}

/* ============================= */
/* Vertical Slider Styles        */
/* ============================= */

/* Assume vertical sliders have an attribute: orient="vertical" */
/* Adjust dimensions as needed (here height is set as an example) */
input[type="range"][orient="vertical"] {
  /* For Firefox */
  writing-mode: bt-lr;
  /* For WebKit */
  
  width: auto;
}

/* Vertical WebKit */
input[type="range"][orient="vertical"]::-webkit-slider-runnable-track {
  width: var(--_range-thickness);
  height: 100%;
}
input[type="range"][orient="vertical"]::-webkit-slider-thumb {
  /* Reset vertical margin and center horizontally */
  margin-top: 0;
  margin-left: calc(var(--_thumb-size) * -0.5 + var(--_range-thickness) * 0.5);
}

/* Vertical Firefox */
input[type="range"][orient="vertical"]::-moz-range-track {
  width: var(--_range-thickness);
  height: 100%;
}

/* Vertical IE/Edge */
input[type="range"][orient="vertical"]::-ms-track {
  width: var(--_range-thickness);
  height: 100%;
}